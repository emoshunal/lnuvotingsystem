// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Voters {
  id          Int        @id @default(autoincrement())
  student_id  String     @unique
  name        String
  courseId    Int?
  course      Course?    @relation(fields: [courseId], references: [id])
  pin         Int
  photo_url   String
  votes       Vote[]
  yearLevelId Int?
  yearLevel   YearLevel? @relation(fields: [yearLevelId], references: [id])
}

model Positions {
  id         Int         @id @default(autoincrement())
  name       String
  maxSelect  Int         @default(1)
  candidates Candidate[]
  votes      Vote[]
}

model Candidate {
  id          Int        @id @default(autoincrement())
  name        String
  photo_url   String
  courseId    Int?
  course      Course?    @relation(fields: [courseId], references: [id])
  partyId     Int?
  party       Party?     @relation(fields: [partyId], references: [id])
  positionId  Int
  position    Positions  @relation(fields: [positionId], references: [id])
  yearLevelId Int?
  yearLevel   YearLevel? @relation(fields: [yearLevelId], references: [id])
  votes       Vote[]
}

model YearLevel {
  id         Int         @id @default(autoincrement())
  level      String      @unique
  voters     Voters[]
  candidates Candidate[]
}

model Vote {
  id          Int       @id @default(autoincrement())
  voterId     Int
  candidateId Int
  positionId  Int
  voter       Voters    @relation(fields: [voterId], references: [id])
  candidate   Candidate @relation(fields: [candidateId], references: [id])
  position    Positions @relation(fields: [positionId], references: [id])
}

model Party {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  candidates Candidate[]
}

model Course {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  voters     Voters[]
  candidates Candidate[]
}

model Admin {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
